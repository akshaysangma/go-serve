# deployments/docker-compose.yaml

services:
  # --------------------------------------------------------------------------
  # 1. PostgreSQL
  # --------------------------------------------------------------------------
  postgres:
    image: postgres:16-alpine
    container_name: goserve_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: goserve_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data # This refers to the top-level volume
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d goserve_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --------------------------------------------------------------------------
  # 2. Redis
  # --------------------------------------------------------------------------
  redis:
    image: redis:7-alpine
    container_name: goserve_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data # This refers to the top-level volume
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  # --------------------------------------------------------------------------
  # 3. MongoDB
  # --------------------------------------------------------------------------
  mongodb:
    image: mongo:7
    container_name: goserve_mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db # This refers to the top-level volume
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --port 27017 localhost/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --------------------------------------------------------------------------
  # 4. Zookeeper (Required for Kafka)
  # --------------------------------------------------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: goserve_zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --------------------------------------------------------------------------
  # 5. Kafka Broker
  # --------------------------------------------------------------------------
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: goserve_kafka
    restart: always
    ports:
      - "9092:9092" # External listener
      - "29092:29092" # Internal listener (for services within docker-compose network)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

# TOP-LEVEL VOLUMES DECLARATION
volumes:
  postgres_data:
  redis_data:
  mongodb_data:
